
'''
字符串的驻留机制

使用什么引号创建，地址都是相同的（指向内存的同一块空间
==比较的是值 比较对象的标识使用is
不同的值被存放在字符串的驻留池中，如果后续创建相同字符串，不会开辟新空间，知识把该字符串的地址赋给新创建的变量
    1 字符串长度为0或1时
    2 符合标识符的字符串
    3 字符串只在编译时进行驻留，而非运行时
    4 [-5,256]之间的整数数字
'''
a ='Python'
b ="Python"
c ='''Python'''
print(a,id(a))
print(b,id(b))
print(c,id(c))

s1 =""
s2 =""
print(s1 is s2) #t

s1 ='%'
s2 ='%'
print(s1 is s2) #t

s1 ='abc%'
s2 ='abc%'
print(s1 is s2) #t???在原生编译器是f 是因为pycharm对字符串进行了优化处理，只要相同就驻留
print(s1,id(s1))
print(s2,id(s2))

'''
 拼接字符串和修改字符串是影响性能的，所以在进行拼接时建议使用str类型的join方法 不用+
 因为join是先计算出所有字符中的长度，然后再拷贝，只new一次对象，效率要比+高很多
'''


